---
- name: Check variable openslides_secure_key
  when: not openslides_secure_key
  fail:
    msg: The varialbe openslides_secure_key is not set


- name: Setup ubuntu 16.04
  when: ansible_distribution == "Ubuntu" and ansible_distribution_version == "16.04"
  include: ubuntu16.04.yml

- name: Setup Archlinux
  when: ansible_distribution == "Archlinux"
  include: archlinux.yml

- name: Check Setup
  when: not openslides_distro_fround
  fail:
    msg: You distribution is not supported

- name: Create user openslides
  user:
    name: openslides
    system: yes
    createhome: no
    state: present
  become: yes

- name: Install openslides via pip
  pip:
    name: openslides
    executable: "{{ pip_executable }}"
  become: yes

- name: Create settings path
  file:
    path: "{{ openslides_settings_path }}"
    state: directory
    mode: 0755
  become: yes

- name: create user data path
  file:
    path: "{{ openslides_user_data_path }}"
    state: directory
    mode: 0755
    owner: openslides
  become: yes

- name: Create Settings
  copy:
    dest: "{{ openslides_settings_path }}/settings.py"
    content: |
      from openslides.global_settings import *
      SECRET_KEY = '{{ openslides_secure_key }}'
      DATABASES = {
          'default': {
              'ENGINE': 'django.db.backends.sqlite3',
              'NAME': '{{ openslides_user_data_path }}/database.sqlite',
          }
      }
      MEDIA_ROOT = '{{ openslides_user_data_path }}/media/'
      SEARCH_INDEX = '{{ openslides_user_data_path }}/search_index/'
      STATIC_ROOT = '{{ openslides_user_data_path }}/collected_static/'
  become: yes

- name: Migrate Database
  command: openslides migrate --pythonpath {{ openslides_settings_path }} --settings settings --noinput
  args:
    creates: "{{ openslides_user_data_path }}/database.sqlite"
  become: yes
  become_user: openslides
  register: openslidesMigratedDatabase

- name: Activate anonymous user
  when: openslidesMigratedDatabase.changed
  shell: echo "from openslides.core.config import config;config['general_system_enable_anonymous']=True" | openslides shell --pythonpath {{ openslides_settings_path }} --settings settings
  become: yes

- name: Collect Static
  command: openslides collectstatic --pythonpath {{ openslides_settings_path }} --settings settings --noinput
  args:
    creates: "{{ openslides_user_data_path }}/collected_static/css"
  become: yes
  become_user: openslides

- name: Create systemd-unit for openslides
  copy:
    dest: /etc/systemd/system/openslides.service
    content: |
      [Unit]
      Description=Presentation and assembly system
      Wants=network.target

      [Service]
      ExecStart={{ openslides_bin }} runserver {% if openslides_listen_global %}0.0.0.0:{% endif %}{{ openslides_port }} --pythonpath {{ openslides_settings_path }} --settings settings
      User=openslides

      [Install]
      WantedBy=multi-user.target
  become: yes
  register: createOpenslidesSystemFile

- name: Reload systemd units
  when: createOpenslidesSystemFile.changed
  command: systemctl daemon-reload
  become: yes

- name: Start and enalbe openslides
  service:
    name: openslides
    enabled: yes
    state: started
  become: yes

- name: Create nginx vhost config
  when: openslides_nginx_domains
  copy:
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    content: |
      server {
          server_name {{ item }};
          listen 0.0.0.0:80;
          listen [::]:80;

          location /static/ {
             alias {{ openslides_user_data_path }}/collected_static/;
          }

          location /media/ {
              alias {{ openslides_user_data_path }}/media/;
          }

          location / {
              proxy_pass_header Server;
              proxy_set_header Host $http_host;
              proxy_redirect off;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Scheme $scheme;
              proxy_pass http://localhost:{{ openslides_port }};
          }
      }
  with_items: "{{ openslides_nginx_domains }}"
  become: yes
  notify:
  - Restart nginx

- name: Create nginx global config
  when: openslides_nginx_global
  copy:
    dest: /etc/nginx/nginx.conf
    content: |
      worker_processes 1;

      events {
        worker_connections  1024;
      }

      http {
        include mime.types;
        default_type application/octet-stream;
        sendfile on;
        keepalive_timeout 65;
        server {
          listen 80;

          location /static/ {
             alias {{ openslides_user_data_path }}/collected_static/;
          }

          location /media/ {
              alias {{ openslides_user_data_path }}/media/;
          }

          location / {
              proxy_pass_header Server;
              proxy_set_header Host $http_host;
              proxy_redirect off;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Scheme $scheme;
              proxy_pass http://localhost:{{ openslides_port }};
          }
        }
      }
  become: yes
  notify:
  - Restart nginx

- name: Start and enable nginx
  when: openslides_nginx_domains or openslides_nginx_global
  service:
    name: nginx
    enabled: yes
    state: started
  become: yes
